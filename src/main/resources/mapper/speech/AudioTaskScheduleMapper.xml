<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.keep.demo.mapper.speech.AudioTaskScheduleMapper">
  <resultMap id="BaseResultMap" type="org.keep.demo.entity.speech.AudioTaskSchedule">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="sf_file_id" jdbcType="INTEGER" property="sfFileId" />
    <result column="sofl_seq_nr" jdbcType="VARCHAR" property="soflSeqNr" />
    <result column="check_start_time" jdbcType="TIMESTAMP" property="checkStartTime" />
    <result column="check_end_time" jdbcType="TIMESTAMP" property="checkEndTime" />
    <result column="check_decrypt_decode_start_time" jdbcType="TIMESTAMP" property="checkDecryptDecodeStartTime" />
    <result column="check_decrypt_decode_end_time" jdbcType="TIMESTAMP" property="checkDecryptDecodeEndTime" />
    <result column="check_transcode_start_time" jdbcType="TIMESTAMP" property="checkTranscodeStartTime" />
    <result column="check_transcode_end_time" jdbcType="TIMESTAMP" property="checkTranscodeEndTime" />
    <result column="check_generate_flac_start_time" jdbcType="TIMESTAMP" property="checkGenerateFlacStartTime" />
    <result column="check_generate_flac_end_time" jdbcType="TIMESTAMP" property="checkGenerateFlacEndTime" />
    <result column="check_upload_start_time" jdbcType="TIMESTAMP" property="checkUploadStartTime" />
    <result column="check_upload_end_time" jdbcType="TIMESTAMP" property="checkUploadEndTime" />
    <result column="recognise_start_time" jdbcType="TIMESTAMP" property="recogniseStartTime" />
    <result column="recognise_end_time" jdbcType="TIMESTAMP" property="recogniseEndTime" />
    <result column="analysis_storage_start_time" jdbcType="TIMESTAMP" property="analysisStorageStartTime" />
    <result column="analysis_storage_end_time" jdbcType="TIMESTAMP" property="analysisStorageEndTime" />
    <result column="analysis_sample_compress_start_time" jdbcType="TIMESTAMP" property="analysisSampleCompressStartTime" />
    <result column="analysis_sample_compress_end_time" jdbcType="TIMESTAMP" property="analysisSampleCompressEndTime" />
    <result column="analysis_upload_start_time" jdbcType="TIMESTAMP" property="analysisUploadStartTime" />
    <result column="analysis_upload_end_time" jdbcType="TIMESTAMP" property="analysisUploadEndTime" />
    <result column="analysis_role_recognise_start_time" jdbcType="TIMESTAMP" property="analysisRoleRecogniseStartTime" />
    <result column="analysis_role_recognise_end_time" jdbcType="TIMESTAMP" property="analysisRoleRecogniseEndTime" />
    <result column="align_start_time" jdbcType="TIMESTAMP" property="alignStartTime" />
    <result column="align_end_time" jdbcType="TIMESTAMP" property="alignEndTime" />
    <result column="label_storage_start_time" jdbcType="TIMESTAMP" property="labelStorageStartTime" />
    <result column="label_storage_end_time" jdbcType="TIMESTAMP" property="labelStorageEndTime" />
    <result column="created_time" jdbcType="TIMESTAMP" property="createdTime" />
    <result column="updated_time" jdbcType="TIMESTAMP" property="updatedTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, sf_file_id, sofl_seq_nr, check_start_time, check_end_time, check_decrypt_decode_start_time, 
    check_decrypt_decode_end_time, check_transcode_start_time, check_transcode_end_time, 
    check_generate_flac_start_time, check_generate_flac_end_time, check_upload_start_time, 
    check_upload_end_time, recognise_start_time, recognise_end_time, analysis_storage_start_time, 
    analysis_storage_end_time, analysis_sample_compress_start_time, analysis_sample_compress_end_time, 
    analysis_upload_start_time, analysis_upload_end_time, analysis_role_recognise_start_time, 
    analysis_role_recognise_end_time, align_start_time, align_end_time, label_storage_start_time, 
    label_storage_end_time, created_time, updated_time
  </sql>
  <select id="selectByExample" parameterType="org.keep.demo.entity.speech.AudioTaskScheduleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from cps_audio_task_schedule
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from cps_audio_task_schedule
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from cps_audio_task_schedule
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="org.keep.demo.entity.speech.AudioTaskScheduleExample">
    delete from cps_audio_task_schedule
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.keep.demo.entity.speech.AudioTaskSchedule">
    insert into cps_audio_task_schedule (id, sf_file_id, sofl_seq_nr, 
      check_start_time, check_end_time, check_decrypt_decode_start_time, 
      check_decrypt_decode_end_time, check_transcode_start_time, 
      check_transcode_end_time, check_generate_flac_start_time, 
      check_generate_flac_end_time, check_upload_start_time, 
      check_upload_end_time, recognise_start_time, 
      recognise_end_time, analysis_storage_start_time, 
      analysis_storage_end_time, analysis_sample_compress_start_time, 
      analysis_sample_compress_end_time, analysis_upload_start_time, 
      analysis_upload_end_time, analysis_role_recognise_start_time, 
      analysis_role_recognise_end_time, align_start_time, 
      align_end_time, label_storage_start_time, 
      label_storage_end_time, created_time, updated_time
      )
    values (#{id,jdbcType=INTEGER}, #{sfFileId,jdbcType=INTEGER}, #{soflSeqNr,jdbcType=VARCHAR}, 
      #{checkStartTime,jdbcType=TIMESTAMP}, #{checkEndTime,jdbcType=TIMESTAMP}, #{checkDecryptDecodeStartTime,jdbcType=TIMESTAMP}, 
      #{checkDecryptDecodeEndTime,jdbcType=TIMESTAMP}, #{checkTranscodeStartTime,jdbcType=TIMESTAMP}, 
      #{checkTranscodeEndTime,jdbcType=TIMESTAMP}, #{checkGenerateFlacStartTime,jdbcType=TIMESTAMP}, 
      #{checkGenerateFlacEndTime,jdbcType=TIMESTAMP}, #{checkUploadStartTime,jdbcType=TIMESTAMP}, 
      #{checkUploadEndTime,jdbcType=TIMESTAMP}, #{recogniseStartTime,jdbcType=TIMESTAMP}, 
      #{recogniseEndTime,jdbcType=TIMESTAMP}, #{analysisStorageStartTime,jdbcType=TIMESTAMP}, 
      #{analysisStorageEndTime,jdbcType=TIMESTAMP}, #{analysisSampleCompressStartTime,jdbcType=TIMESTAMP}, 
      #{analysisSampleCompressEndTime,jdbcType=TIMESTAMP}, #{analysisUploadStartTime,jdbcType=TIMESTAMP}, 
      #{analysisUploadEndTime,jdbcType=TIMESTAMP}, #{analysisRoleRecogniseStartTime,jdbcType=TIMESTAMP}, 
      #{analysisRoleRecogniseEndTime,jdbcType=TIMESTAMP}, #{alignStartTime,jdbcType=TIMESTAMP}, 
      #{alignEndTime,jdbcType=TIMESTAMP}, #{labelStorageStartTime,jdbcType=TIMESTAMP}, 
      #{labelStorageEndTime,jdbcType=TIMESTAMP}, #{createdTime,jdbcType=TIMESTAMP}, #{updatedTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="org.keep.demo.entity.speech.AudioTaskSchedule">
    insert into cps_audio_task_schedule
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="sfFileId != null">
        sf_file_id,
      </if>
      <if test="soflSeqNr != null">
        sofl_seq_nr,
      </if>
      <if test="checkStartTime != null">
        check_start_time,
      </if>
      <if test="checkEndTime != null">
        check_end_time,
      </if>
      <if test="checkDecryptDecodeStartTime != null">
        check_decrypt_decode_start_time,
      </if>
      <if test="checkDecryptDecodeEndTime != null">
        check_decrypt_decode_end_time,
      </if>
      <if test="checkTranscodeStartTime != null">
        check_transcode_start_time,
      </if>
      <if test="checkTranscodeEndTime != null">
        check_transcode_end_time,
      </if>
      <if test="checkGenerateFlacStartTime != null">
        check_generate_flac_start_time,
      </if>
      <if test="checkGenerateFlacEndTime != null">
        check_generate_flac_end_time,
      </if>
      <if test="checkUploadStartTime != null">
        check_upload_start_time,
      </if>
      <if test="checkUploadEndTime != null">
        check_upload_end_time,
      </if>
      <if test="recogniseStartTime != null">
        recognise_start_time,
      </if>
      <if test="recogniseEndTime != null">
        recognise_end_time,
      </if>
      <if test="analysisStorageStartTime != null">
        analysis_storage_start_time,
      </if>
      <if test="analysisStorageEndTime != null">
        analysis_storage_end_time,
      </if>
      <if test="analysisSampleCompressStartTime != null">
        analysis_sample_compress_start_time,
      </if>
      <if test="analysisSampleCompressEndTime != null">
        analysis_sample_compress_end_time,
      </if>
      <if test="analysisUploadStartTime != null">
        analysis_upload_start_time,
      </if>
      <if test="analysisUploadEndTime != null">
        analysis_upload_end_time,
      </if>
      <if test="analysisRoleRecogniseStartTime != null">
        analysis_role_recognise_start_time,
      </if>
      <if test="analysisRoleRecogniseEndTime != null">
        analysis_role_recognise_end_time,
      </if>
      <if test="alignStartTime != null">
        align_start_time,
      </if>
      <if test="alignEndTime != null">
        align_end_time,
      </if>
      <if test="labelStorageStartTime != null">
        label_storage_start_time,
      </if>
      <if test="labelStorageEndTime != null">
        label_storage_end_time,
      </if>
      <if test="createdTime != null">
        created_time,
      </if>
      <if test="updatedTime != null">
        updated_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="sfFileId != null">
        #{sfFileId,jdbcType=INTEGER},
      </if>
      <if test="soflSeqNr != null">
        #{soflSeqNr,jdbcType=VARCHAR},
      </if>
      <if test="checkStartTime != null">
        #{checkStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="checkEndTime != null">
        #{checkEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="checkDecryptDecodeStartTime != null">
        #{checkDecryptDecodeStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="checkDecryptDecodeEndTime != null">
        #{checkDecryptDecodeEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="checkTranscodeStartTime != null">
        #{checkTranscodeStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="checkTranscodeEndTime != null">
        #{checkTranscodeEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="checkGenerateFlacStartTime != null">
        #{checkGenerateFlacStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="checkGenerateFlacEndTime != null">
        #{checkGenerateFlacEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="checkUploadStartTime != null">
        #{checkUploadStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="checkUploadEndTime != null">
        #{checkUploadEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="recogniseStartTime != null">
        #{recogniseStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="recogniseEndTime != null">
        #{recogniseEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="analysisStorageStartTime != null">
        #{analysisStorageStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="analysisStorageEndTime != null">
        #{analysisStorageEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="analysisSampleCompressStartTime != null">
        #{analysisSampleCompressStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="analysisSampleCompressEndTime != null">
        #{analysisSampleCompressEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="analysisUploadStartTime != null">
        #{analysisUploadStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="analysisUploadEndTime != null">
        #{analysisUploadEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="analysisRoleRecogniseStartTime != null">
        #{analysisRoleRecogniseStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="analysisRoleRecogniseEndTime != null">
        #{analysisRoleRecogniseEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="alignStartTime != null">
        #{alignStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="alignEndTime != null">
        #{alignEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="labelStorageStartTime != null">
        #{labelStorageStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="labelStorageEndTime != null">
        #{labelStorageEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedTime != null">
        #{updatedTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.keep.demo.entity.speech.AudioTaskScheduleExample" resultType="java.lang.Long">
    select count(*) from cps_audio_task_schedule
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update cps_audio_task_schedule
    <set>
      <if test="row.id != null">
        id = #{row.id,jdbcType=INTEGER},
      </if>
      <if test="row.sfFileId != null">
        sf_file_id = #{row.sfFileId,jdbcType=INTEGER},
      </if>
      <if test="row.soflSeqNr != null">
        sofl_seq_nr = #{row.soflSeqNr,jdbcType=VARCHAR},
      </if>
      <if test="row.checkStartTime != null">
        check_start_time = #{row.checkStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="row.checkEndTime != null">
        check_end_time = #{row.checkEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="row.checkDecryptDecodeStartTime != null">
        check_decrypt_decode_start_time = #{row.checkDecryptDecodeStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="row.checkDecryptDecodeEndTime != null">
        check_decrypt_decode_end_time = #{row.checkDecryptDecodeEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="row.checkTranscodeStartTime != null">
        check_transcode_start_time = #{row.checkTranscodeStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="row.checkTranscodeEndTime != null">
        check_transcode_end_time = #{row.checkTranscodeEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="row.checkGenerateFlacStartTime != null">
        check_generate_flac_start_time = #{row.checkGenerateFlacStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="row.checkGenerateFlacEndTime != null">
        check_generate_flac_end_time = #{row.checkGenerateFlacEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="row.checkUploadStartTime != null">
        check_upload_start_time = #{row.checkUploadStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="row.checkUploadEndTime != null">
        check_upload_end_time = #{row.checkUploadEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="row.recogniseStartTime != null">
        recognise_start_time = #{row.recogniseStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="row.recogniseEndTime != null">
        recognise_end_time = #{row.recogniseEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="row.analysisStorageStartTime != null">
        analysis_storage_start_time = #{row.analysisStorageStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="row.analysisStorageEndTime != null">
        analysis_storage_end_time = #{row.analysisStorageEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="row.analysisSampleCompressStartTime != null">
        analysis_sample_compress_start_time = #{row.analysisSampleCompressStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="row.analysisSampleCompressEndTime != null">
        analysis_sample_compress_end_time = #{row.analysisSampleCompressEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="row.analysisUploadStartTime != null">
        analysis_upload_start_time = #{row.analysisUploadStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="row.analysisUploadEndTime != null">
        analysis_upload_end_time = #{row.analysisUploadEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="row.analysisRoleRecogniseStartTime != null">
        analysis_role_recognise_start_time = #{row.analysisRoleRecogniseStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="row.analysisRoleRecogniseEndTime != null">
        analysis_role_recognise_end_time = #{row.analysisRoleRecogniseEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="row.alignStartTime != null">
        align_start_time = #{row.alignStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="row.alignEndTime != null">
        align_end_time = #{row.alignEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="row.labelStorageStartTime != null">
        label_storage_start_time = #{row.labelStorageStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="row.labelStorageEndTime != null">
        label_storage_end_time = #{row.labelStorageEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="row.createdTime != null">
        created_time = #{row.createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="row.updatedTime != null">
        updated_time = #{row.updatedTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update cps_audio_task_schedule
    set id = #{row.id,jdbcType=INTEGER},
      sf_file_id = #{row.sfFileId,jdbcType=INTEGER},
      sofl_seq_nr = #{row.soflSeqNr,jdbcType=VARCHAR},
      check_start_time = #{row.checkStartTime,jdbcType=TIMESTAMP},
      check_end_time = #{row.checkEndTime,jdbcType=TIMESTAMP},
      check_decrypt_decode_start_time = #{row.checkDecryptDecodeStartTime,jdbcType=TIMESTAMP},
      check_decrypt_decode_end_time = #{row.checkDecryptDecodeEndTime,jdbcType=TIMESTAMP},
      check_transcode_start_time = #{row.checkTranscodeStartTime,jdbcType=TIMESTAMP},
      check_transcode_end_time = #{row.checkTranscodeEndTime,jdbcType=TIMESTAMP},
      check_generate_flac_start_time = #{row.checkGenerateFlacStartTime,jdbcType=TIMESTAMP},
      check_generate_flac_end_time = #{row.checkGenerateFlacEndTime,jdbcType=TIMESTAMP},
      check_upload_start_time = #{row.checkUploadStartTime,jdbcType=TIMESTAMP},
      check_upload_end_time = #{row.checkUploadEndTime,jdbcType=TIMESTAMP},
      recognise_start_time = #{row.recogniseStartTime,jdbcType=TIMESTAMP},
      recognise_end_time = #{row.recogniseEndTime,jdbcType=TIMESTAMP},
      analysis_storage_start_time = #{row.analysisStorageStartTime,jdbcType=TIMESTAMP},
      analysis_storage_end_time = #{row.analysisStorageEndTime,jdbcType=TIMESTAMP},
      analysis_sample_compress_start_time = #{row.analysisSampleCompressStartTime,jdbcType=TIMESTAMP},
      analysis_sample_compress_end_time = #{row.analysisSampleCompressEndTime,jdbcType=TIMESTAMP},
      analysis_upload_start_time = #{row.analysisUploadStartTime,jdbcType=TIMESTAMP},
      analysis_upload_end_time = #{row.analysisUploadEndTime,jdbcType=TIMESTAMP},
      analysis_role_recognise_start_time = #{row.analysisRoleRecogniseStartTime,jdbcType=TIMESTAMP},
      analysis_role_recognise_end_time = #{row.analysisRoleRecogniseEndTime,jdbcType=TIMESTAMP},
      align_start_time = #{row.alignStartTime,jdbcType=TIMESTAMP},
      align_end_time = #{row.alignEndTime,jdbcType=TIMESTAMP},
      label_storage_start_time = #{row.labelStorageStartTime,jdbcType=TIMESTAMP},
      label_storage_end_time = #{row.labelStorageEndTime,jdbcType=TIMESTAMP},
      created_time = #{row.createdTime,jdbcType=TIMESTAMP},
      updated_time = #{row.updatedTime,jdbcType=TIMESTAMP}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.keep.demo.entity.speech.AudioTaskSchedule">
    update cps_audio_task_schedule
    <set>
      <if test="sfFileId != null">
        sf_file_id = #{sfFileId,jdbcType=INTEGER},
      </if>
      <if test="soflSeqNr != null">
        sofl_seq_nr = #{soflSeqNr,jdbcType=VARCHAR},
      </if>
      <if test="checkStartTime != null">
        check_start_time = #{checkStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="checkEndTime != null">
        check_end_time = #{checkEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="checkDecryptDecodeStartTime != null">
        check_decrypt_decode_start_time = #{checkDecryptDecodeStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="checkDecryptDecodeEndTime != null">
        check_decrypt_decode_end_time = #{checkDecryptDecodeEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="checkTranscodeStartTime != null">
        check_transcode_start_time = #{checkTranscodeStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="checkTranscodeEndTime != null">
        check_transcode_end_time = #{checkTranscodeEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="checkGenerateFlacStartTime != null">
        check_generate_flac_start_time = #{checkGenerateFlacStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="checkGenerateFlacEndTime != null">
        check_generate_flac_end_time = #{checkGenerateFlacEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="checkUploadStartTime != null">
        check_upload_start_time = #{checkUploadStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="checkUploadEndTime != null">
        check_upload_end_time = #{checkUploadEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="recogniseStartTime != null">
        recognise_start_time = #{recogniseStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="recogniseEndTime != null">
        recognise_end_time = #{recogniseEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="analysisStorageStartTime != null">
        analysis_storage_start_time = #{analysisStorageStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="analysisStorageEndTime != null">
        analysis_storage_end_time = #{analysisStorageEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="analysisSampleCompressStartTime != null">
        analysis_sample_compress_start_time = #{analysisSampleCompressStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="analysisSampleCompressEndTime != null">
        analysis_sample_compress_end_time = #{analysisSampleCompressEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="analysisUploadStartTime != null">
        analysis_upload_start_time = #{analysisUploadStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="analysisUploadEndTime != null">
        analysis_upload_end_time = #{analysisUploadEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="analysisRoleRecogniseStartTime != null">
        analysis_role_recognise_start_time = #{analysisRoleRecogniseStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="analysisRoleRecogniseEndTime != null">
        analysis_role_recognise_end_time = #{analysisRoleRecogniseEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="alignStartTime != null">
        align_start_time = #{alignStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="alignEndTime != null">
        align_end_time = #{alignEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="labelStorageStartTime != null">
        label_storage_start_time = #{labelStorageStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="labelStorageEndTime != null">
        label_storage_end_time = #{labelStorageEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createdTime != null">
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedTime != null">
        updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.keep.demo.entity.speech.AudioTaskSchedule">
    update cps_audio_task_schedule
    set sf_file_id = #{sfFileId,jdbcType=INTEGER},
      sofl_seq_nr = #{soflSeqNr,jdbcType=VARCHAR},
      check_start_time = #{checkStartTime,jdbcType=TIMESTAMP},
      check_end_time = #{checkEndTime,jdbcType=TIMESTAMP},
      check_decrypt_decode_start_time = #{checkDecryptDecodeStartTime,jdbcType=TIMESTAMP},
      check_decrypt_decode_end_time = #{checkDecryptDecodeEndTime,jdbcType=TIMESTAMP},
      check_transcode_start_time = #{checkTranscodeStartTime,jdbcType=TIMESTAMP},
      check_transcode_end_time = #{checkTranscodeEndTime,jdbcType=TIMESTAMP},
      check_generate_flac_start_time = #{checkGenerateFlacStartTime,jdbcType=TIMESTAMP},
      check_generate_flac_end_time = #{checkGenerateFlacEndTime,jdbcType=TIMESTAMP},
      check_upload_start_time = #{checkUploadStartTime,jdbcType=TIMESTAMP},
      check_upload_end_time = #{checkUploadEndTime,jdbcType=TIMESTAMP},
      recognise_start_time = #{recogniseStartTime,jdbcType=TIMESTAMP},
      recognise_end_time = #{recogniseEndTime,jdbcType=TIMESTAMP},
      analysis_storage_start_time = #{analysisStorageStartTime,jdbcType=TIMESTAMP},
      analysis_storage_end_time = #{analysisStorageEndTime,jdbcType=TIMESTAMP},
      analysis_sample_compress_start_time = #{analysisSampleCompressStartTime,jdbcType=TIMESTAMP},
      analysis_sample_compress_end_time = #{analysisSampleCompressEndTime,jdbcType=TIMESTAMP},
      analysis_upload_start_time = #{analysisUploadStartTime,jdbcType=TIMESTAMP},
      analysis_upload_end_time = #{analysisUploadEndTime,jdbcType=TIMESTAMP},
      analysis_role_recognise_start_time = #{analysisRoleRecogniseStartTime,jdbcType=TIMESTAMP},
      analysis_role_recognise_end_time = #{analysisRoleRecogniseEndTime,jdbcType=TIMESTAMP},
      align_start_time = #{alignStartTime,jdbcType=TIMESTAMP},
      align_end_time = #{alignEndTime,jdbcType=TIMESTAMP},
      label_storage_start_time = #{labelStorageStartTime,jdbcType=TIMESTAMP},
      label_storage_end_time = #{labelStorageEndTime,jdbcType=TIMESTAMP},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      updated_time = #{updatedTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="org.keep.demo.entity.speech.AudioTaskScheduleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from cps_audio_task_schedule
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleWithRowbounds" parameterType="org.keep.demo.entity.speech.AudioTaskScheduleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from cps_audio_task_schedule
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>