<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.keep.demo.mapper.speech.ErrorRecordMapper">
  <resultMap id="BaseResultMap" type="org.keep.demo.entity.speech.ErrorRecord">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="sf_file_id" jdbcType="INTEGER" property="sfFileId" />
    <result column="sofl_seq_nr" jdbcType="VARCHAR" property="soflSeqNr" />
    <result column="error_location" jdbcType="VARCHAR" property="errorLocation" />
    <result column="error_code" jdbcType="INTEGER" property="errorCode" />
    <result column="error_summary" jdbcType="VARCHAR" property="errorSummary" />
    <result column="created_date" jdbcType="TIMESTAMP" property="createdDate" />
    <result column="updated_date" jdbcType="TIMESTAMP" property="updatedDate" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="org.keep.demo.entity.speech.ErrorRecord">
    <result column="error_detail" jdbcType="LONGVARCHAR" property="errorDetail" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, sf_file_id, sofl_seq_nr, error_location, error_code, error_summary, created_date, 
    updated_date
  </sql>
  <sql id="Blob_Column_List">
    error_detail
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="org.keep.demo.entity.speech.ErrorRecordExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from cps_error_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="org.keep.demo.entity.speech.ErrorRecordExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from cps_error_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from cps_error_record
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from cps_error_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="org.keep.demo.entity.speech.ErrorRecordExample">
    delete from cps_error_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.keep.demo.entity.speech.ErrorRecord">
    insert into cps_error_record (id, sf_file_id, sofl_seq_nr, 
      error_location, error_code, error_summary, 
      created_date, updated_date, error_detail
      )
    values (#{id,jdbcType=INTEGER}, #{sfFileId,jdbcType=INTEGER}, #{soflSeqNr,jdbcType=VARCHAR}, 
      #{errorLocation,jdbcType=VARCHAR}, #{errorCode,jdbcType=INTEGER}, #{errorSummary,jdbcType=VARCHAR}, 
      #{createdDate,jdbcType=TIMESTAMP}, #{updatedDate,jdbcType=TIMESTAMP}, #{errorDetail,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="org.keep.demo.entity.speech.ErrorRecord">
    insert into cps_error_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="sfFileId != null">
        sf_file_id,
      </if>
      <if test="soflSeqNr != null">
        sofl_seq_nr,
      </if>
      <if test="errorLocation != null">
        error_location,
      </if>
      <if test="errorCode != null">
        error_code,
      </if>
      <if test="errorSummary != null">
        error_summary,
      </if>
      <if test="createdDate != null">
        created_date,
      </if>
      <if test="updatedDate != null">
        updated_date,
      </if>
      <if test="errorDetail != null">
        error_detail,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="sfFileId != null">
        #{sfFileId,jdbcType=INTEGER},
      </if>
      <if test="soflSeqNr != null">
        #{soflSeqNr,jdbcType=VARCHAR},
      </if>
      <if test="errorLocation != null">
        #{errorLocation,jdbcType=VARCHAR},
      </if>
      <if test="errorCode != null">
        #{errorCode,jdbcType=INTEGER},
      </if>
      <if test="errorSummary != null">
        #{errorSummary,jdbcType=VARCHAR},
      </if>
      <if test="createdDate != null">
        #{createdDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedDate != null">
        #{updatedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="errorDetail != null">
        #{errorDetail,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.keep.demo.entity.speech.ErrorRecordExample" resultType="java.lang.Long">
    select count(*) from cps_error_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update cps_error_record
    <set>
      <if test="row.id != null">
        id = #{row.id,jdbcType=INTEGER},
      </if>
      <if test="row.sfFileId != null">
        sf_file_id = #{row.sfFileId,jdbcType=INTEGER},
      </if>
      <if test="row.soflSeqNr != null">
        sofl_seq_nr = #{row.soflSeqNr,jdbcType=VARCHAR},
      </if>
      <if test="row.errorLocation != null">
        error_location = #{row.errorLocation,jdbcType=VARCHAR},
      </if>
      <if test="row.errorCode != null">
        error_code = #{row.errorCode,jdbcType=INTEGER},
      </if>
      <if test="row.errorSummary != null">
        error_summary = #{row.errorSummary,jdbcType=VARCHAR},
      </if>
      <if test="row.createdDate != null">
        created_date = #{row.createdDate,jdbcType=TIMESTAMP},
      </if>
      <if test="row.updatedDate != null">
        updated_date = #{row.updatedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="row.errorDetail != null">
        error_detail = #{row.errorDetail,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update cps_error_record
    set id = #{row.id,jdbcType=INTEGER},
      sf_file_id = #{row.sfFileId,jdbcType=INTEGER},
      sofl_seq_nr = #{row.soflSeqNr,jdbcType=VARCHAR},
      error_location = #{row.errorLocation,jdbcType=VARCHAR},
      error_code = #{row.errorCode,jdbcType=INTEGER},
      error_summary = #{row.errorSummary,jdbcType=VARCHAR},
      created_date = #{row.createdDate,jdbcType=TIMESTAMP},
      updated_date = #{row.updatedDate,jdbcType=TIMESTAMP},
      error_detail = #{row.errorDetail,jdbcType=LONGVARCHAR}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update cps_error_record
    set id = #{row.id,jdbcType=INTEGER},
      sf_file_id = #{row.sfFileId,jdbcType=INTEGER},
      sofl_seq_nr = #{row.soflSeqNr,jdbcType=VARCHAR},
      error_location = #{row.errorLocation,jdbcType=VARCHAR},
      error_code = #{row.errorCode,jdbcType=INTEGER},
      error_summary = #{row.errorSummary,jdbcType=VARCHAR},
      created_date = #{row.createdDate,jdbcType=TIMESTAMP},
      updated_date = #{row.updatedDate,jdbcType=TIMESTAMP}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.keep.demo.entity.speech.ErrorRecord">
    update cps_error_record
    <set>
      <if test="sfFileId != null">
        sf_file_id = #{sfFileId,jdbcType=INTEGER},
      </if>
      <if test="soflSeqNr != null">
        sofl_seq_nr = #{soflSeqNr,jdbcType=VARCHAR},
      </if>
      <if test="errorLocation != null">
        error_location = #{errorLocation,jdbcType=VARCHAR},
      </if>
      <if test="errorCode != null">
        error_code = #{errorCode,jdbcType=INTEGER},
      </if>
      <if test="errorSummary != null">
        error_summary = #{errorSummary,jdbcType=VARCHAR},
      </if>
      <if test="createdDate != null">
        created_date = #{createdDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedDate != null">
        updated_date = #{updatedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="errorDetail != null">
        error_detail = #{errorDetail,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="org.keep.demo.entity.speech.ErrorRecord">
    update cps_error_record
    set sf_file_id = #{sfFileId,jdbcType=INTEGER},
      sofl_seq_nr = #{soflSeqNr,jdbcType=VARCHAR},
      error_location = #{errorLocation,jdbcType=VARCHAR},
      error_code = #{errorCode,jdbcType=INTEGER},
      error_summary = #{errorSummary,jdbcType=VARCHAR},
      created_date = #{createdDate,jdbcType=TIMESTAMP},
      updated_date = #{updatedDate,jdbcType=TIMESTAMP},
      error_detail = #{errorDetail,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.keep.demo.entity.speech.ErrorRecord">
    update cps_error_record
    set sf_file_id = #{sfFileId,jdbcType=INTEGER},
      sofl_seq_nr = #{soflSeqNr,jdbcType=VARCHAR},
      error_location = #{errorLocation,jdbcType=VARCHAR},
      error_code = #{errorCode,jdbcType=INTEGER},
      error_summary = #{errorSummary,jdbcType=VARCHAR},
      created_date = #{createdDate,jdbcType=TIMESTAMP},
      updated_date = #{updatedDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithBLOBsWithRowbounds" parameterType="org.keep.demo.entity.speech.ErrorRecordExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from cps_error_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleWithRowbounds" parameterType="org.keep.demo.entity.speech.ErrorRecordExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from cps_error_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleWithBLOBsWithRowbounds" parameterType="org.keep.demo.entity.speech.ErrorRecordExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from cps_error_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleWithRowbounds" parameterType="org.keep.demo.entity.speech.ErrorRecordExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from cps_error_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>